% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/computeWeightedDeviations.R
\docType{methods}
\name{computeWeightedDeviations}
\alias{computeWeightedDeviations}
\alias{computeWeightedDeviations,SummarizedExperiment,SummarizedExperiment-method}
\alias{computeWeightedDeviations,SummarizedExperiment,list-method}
\title{computeWeightedDeviations}
\usage{
computeWeightedDeviations(object, annotations, ...)


  \S4method{computeWeightedDeviations}{SummarizedExperiment,SummarizedExperiment}(object,
  annotations, background_peaks = getBackgroundPeaks(object),
  expectation = computeExpectations(object))

\S4method{computeWeightedDeviations}{SummarizedExperiment,list}(object,
  annotations, background_peaks = getBackgroundPeaks(object),
  expectation = computeExpectations(object))
}
\arguments{
\item{object}{chromVARCounts object}

\item{annotations}{chromVARAnnotations object}

\item{...}{additional arguments}

\item{background_peaks}{(optional) background peaks matrix computed using
\code{\link{getBackgroundPeaks}}, computed internally with default
paramaters if not provided}

\item{expectation}{(optional) expectations computed using
\code{\link{computeExpectations}}, computed automatically if not provided}
}
\value{
\code{\link{chromVARDeviations-class}}, which inherits from
SummarizedExperiment, and has two assays: deviations and deviation scores.
}
\description{
Computes weighted deviations in chromatin accessibility
across sets of annotations where the number of the annotation
meaningful.
}
\details{
multiprocessing using \code{\link[BiocParallel]{bplapply}}
}
\section{Methods (by class)}{
\itemize{
\item \code{object = SummarizedExperiment,annotations = SummarizedExperiment}: / annotations are SummarizedExperiment

\item \code{object = SummarizedExperiment,annotations = list}: object is SummarizedExperiment,
annotations are list
}}

\examples{
# Register BiocParallel
BiocParallel::register(BiocParallel::SerialParam())
# Load very small example counts (already filtered)
data(mini_counts, package = "chromVAR")
# Load mini weighted counts
rdsA<-paste0(system.file('rds',package='chromVARxx'),'/mini_w')
object <- readRDS(rdsA)

# computing deviations
wdev <- computeWeightedDeviations(object = mini_counts,
                         annotations = mini_w)
}
\author{
Caleb Lareau
}
